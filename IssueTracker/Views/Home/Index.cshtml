@model IndexViewModel
@{
    ViewData["Title"] = "Dashboard";
    var labelnames = Json.Serialize(@Model.UserTickets.Keys.ToList());
}
<div class="text-center">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <!-- Tickets by Type -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Tickets by Priority</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart">
                            <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
                <!-- DONUT CHART -->
                <div class="card card-fuchsia">
                    <div class="card-header">
                        <h3 class="card-title">Tickets By Type</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="donutChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->

            </div>
            <!-- /.col (LEFT) -->
            <div class="col-md-6">
                <!-- BAR CHART -->
                <div class="card card-olive">
                    <div class="card-header">
                        <h3 class="card-title">Tickets by Status</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart">
                            <canvas id="barChart2" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
                <!-- PIE CHART -->
                <div class="card card-indigo">
                    <div class="card-header">
                        <h3 class="card-title">Tickets by User</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="pieChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;" class="chartjs-render-monitor"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col (RIGHT) -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

@section Scripts
{
    <script>$(function () {

            //-------------
            //- Ticket Type CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.
            var typeCanvas = $('#donutChart').get(0).getContext('2d')
            var typeData = {
                labels: [
                    'Bugs/Errors',
                    'Feature Requests',
                    'Other Comments',
                    'Styling Comments',
                ],
                datasets: [
                    {
                        data: [@Model.Bugs, @Model.Features, @Model.Other, @Model.Styling],
                        backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef'],
                    }
                ]
            }
            var donutOptions = {
                maintainAspectRatio: false,
                responsive: true,
            }

            new Chart(typeCanvas, {
                type: 'doughnut',
                data: typeData,
                options: donutOptions
            })

            //-------------
            //- PIE CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.
            var userCanvas = $('#pieChart').get(0).getContext('2d')
            var userData = {
                labels: @labelnames,
                datasets: [
                    {
                        data: [@Model.UserTickets.Values.ElementAt(0), @Model.UserTickets.Values.ElementAt(1), @Model.UserTickets.Values.ElementAt(2), @Model.UserTickets.Values.ElementAt(3), @Model.UserTickets.Values.ElementAt(4)],
                        backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc'],
                    }
                ]
            };

            var pieOptions = {
                maintainAspectRatio: false,
                responsive: true,
            }
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            new Chart(userCanvas, {
                type: 'pie',
                data: userData,
                options: pieOptions
            })

            //-------------
            //- Priority CHART -
            //-------------

            var priorityData = {
                labels: ['None', 'Low', 'Medium', 'High', 'Urgent'],
                datasets: [
                    {
                        label: 'Tickets',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: [@Model.NoPriority, @Model.LowPriority, @Model.MediumPriority, @Model.HighPriority, @Model.UrgentPriority],
                        backgroundColor: ['#f6bdc0', '#f69697', '#ee6b6e', '#f94449', '#de0a26'],
                    },
                ],
            }

            var priorityCanvas = $('#barChart').get(0).getContext('2d')

            var barChartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                datasetFill: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 15,
                            stepSize: 3
                        }
                    }]
                }
            }

            new Chart(priorityCanvas, {
                type: 'bar',
                data: priorityData,
                options: barChartOptions
            })

            //-------------
            //- Status CHART -
            //-------------

            var statusData = {
                labels: ['None', 'Open', 'In Progress', 'Resolved', 'Info Needed'],
                datasets: [
                    {
                        label: 'Tickets',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: [@Model.NoStatus, @Model.OpenStatus, @Model.InProgressStatus, @Model.ResolvedStatus, @Model.InfoStatus],
                        backgroundColor: ['#bcd2e8', '#91BAD6', '#73a5c6', '#528aae', '#1e3f66'],
                    },
                ],
            }
            var statusCanvas = $('#barChart2').get(0).getContext('2d')

            new Chart(statusCanvas, {
                type: 'bar',
                data: statusData,
                options: barChartOptions
            })

        })</script>

}
